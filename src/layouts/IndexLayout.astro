--- 
import { getSession } from '@solid-auth/base';
import { authOptions } from '@/server/auth';
import FriendRequestSidebarOptions from '@/components/FriendRequestSidebarOptions'
import SignOutButton from '@/components/SignOutButton';
import { getFriendsByUserId, fetchRedis } from '@/server/redis'
import { chatHrefConstructor } from '@/utils'

interface Props {
	title: string;
}

const { title } = Astro.props;

const sidebarOptions = [
  {
    id: 1,
    name: 'Add friend',
    href: '/dashboard/add',
    Icon: 'UserPlus',
  },
];

const session: Session = await getSession(Astro.request, authOptions) as any
console.log('[ cookie ] >',session )
if (!session) Astro.redirect('/login');

const friends = await getFriendsByUserId(session.user.id);
const unseenRequestCount = (
    (await fetchRedis(
      'smembers',
      `user:${session.user.id}:incoming_friend_requests`
    )) as User[]
  ).length;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>

    <div class="w-full flex h-screen">
  

      <div class="hidden md:flex h-full w-full max-w-xs grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-white px-6">
        <a href="/dashboard" class="flex h-16 shrink-0 items-center">
          <!-- logo -->
          <div class="i-mingcute-loading-fill h-8 w-auto text-indigo-600" />
        </a>

        {friends.length > 0 ? (
          <div class="text-xs font-semibold leading-6 text-gray-400">
            Your chats
          </div>
        ) : null}

        <nav class="flex flex-1 flex-col">
          <ul role="list" class="flex flex-1 flex-col gap-y-7">
            <li>
              <ul role="list" class="max-h-[25rem] overflow-y-auto -mx-2 space-y-1">
                <li>
                  <a
                    href={`/dashboard/ai`}
                    class="text-gray-700 hover:text-indigo-600 hover:bg-gray-50 group flex items-center gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                  >
                    Rayone
                  </a>
                </li>
                {friends.map((friend) => {
                  return (
                    <li >
                      <a
                        href={`/dashboard/chat/${chatHrefConstructor(
                          session.user.id,
                          friend.id
                        )}`}
                        class="text-gray-700 hover:text-indigo-600 hover:bg-gray-50 group flex items-center gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold"
                      >
                        {friend.name}
                      </a>
                    </li>
                  );
                })}
              </ul>
            </li>
            <li>
              <div class="text-xs font-semibold leading-6 text-gray-400">
                Overview
              </div>

              <ul role="list" class="-mx-2 mt-2 space-y-1">
                {sidebarOptions.map((option) => {
                  return (
                    <li>
                      <a
                        href={option.href}
                        class="text-gray-700 hover:text-indigo-600 hover:bg-gray-50 group flex gap-3 rounded-md p-2 text-sm leading-6 font-semibold"
                      >
                        <span class="text-gray-400 border-gray-200 group-hover:border-indigo-600 group-hover:text-indigo-600 flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border text-[0.625rem] font-medium bg-white">
                          {/* logo */}
                          <div class="i-mingcute-loading-fill h-4 w-4" />
                        </span>
                        <span class="truncate">{option.name}</span>
                      </a>
                    </li>
                  );
                })}

                <li>
                  <FriendRequestSidebarOptions
                    sessionId={session.user.id}
                    initialUnseenRequestCount={unseenRequestCount}
                  />
                </li>
              </ul>
            </li>

            <li class="-mx-6 mt-auto flex items-center">
              <div class="flex flex-1 items-center gap-x-4 px-6 py-3 text-sm font-semibold leading-6 text-gray-900">
                <div class="relative h-8 w-8 bg-gray-50">
                  <img class="rounded-full" src={session.user.image || ''} alt="Your profile picture">
                </div>

                <span class="sr-only">Your profile</span>
                <div class="flex flex-col">
                  <span aria-hidden="true">{session.user.name}</span>
                  <span class="text-xs text-zinc-400" aria-hidden="true">
                    {session.user.email}
                  </span>
                </div>
              </div>

              <SignOutButton client:load class="h-full aspect-square" />
            </li>
          </ul>
        </nav>
      </div>

      <aside class="max-h-screen container py-16 md:py-12 w-full">
        <slot />
      </aside>
    </div>
	
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), rgb(var(--accent-light)) 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-size: 224px;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
</style>
