---
import { getSession } from '@solid-auth/base';
import { authOptions } from '@/server/auth';
import IndexLayout from '@/layouts/IndexLayout.astro';
import { fetchRedis } from '@/server/redis';
import Messages from '@/components/Messages';
import ChatInput from '@/components/ChatInput';

const session: Session = (await getSession(Astro.request, authOptions)) as any;
if (!session) return Astro.redirect('/login');
const chatId = Astro.params.chatId;
const [userId1, userId2] = chatId.split('--');
const { user } = session;

const chatPartnerId = user.id === userId1 ? userId2 : userId1;
const chatPartnerRaw = (await fetchRedis(
  'get',
  `user:${chatPartnerId}`
)) as string;

const results: string[] = await fetchRedis(
  'zrange',
  `chat:${chatId}:messages`,
  0,
  -1
);

const chatPartner = JSON.parse(chatPartnerRaw) as User;

const initialMessages = results
  .map((message) => JSON.parse(message) as Message)
  .reverse();
---

<IndexLayout title="Welcome to Astro." session={session}>
  <div
    class="flex-1 justify-between flex flex-col h-full max-h-[calc(100vh-6rem)]"
  >
    <div
      class="flex sm:items-center justify-between py-3 border-b-2 border-gray-200"
    >
      <div class="relative flex items-center space-x-4">
        <div class="relative">
          <div class="relative w-8 sm:w-12 h-8 sm:h-12">
            <img
              class="rounded-full"
              src={chatPartner?.image}
              alt={`${chatPartner?.name} profile picture`}
            />
          </div>
        </div>

        <div class="flex flex-col leading-tight">
          <div class="text-xl flex items-center">
            <span class="text-gray-700 mr-3 font-semibold">
              {chatPartner?.name}
            </span>
          </div>

          <span class="text-sm text-gray-600">{chatPartner?.email}</span>
        </div>
      </div>
    </div>
    <Messages
      chatId={chatId}
      chatPartner={chatPartner}
      sessionImg={session.user.image}
      sessionId={session.user.id}
      initialMessages={initialMessages}
      client:load
    />
    <ChatInput chatId={chatId} chatPartner={chatPartner} client:load />
  </div>
</IndexLayout>

<style></style>
